{"version":3,"file":"static/js/684.86d49879.chunk.js","mappings":"6QAMe,SAASA,EAAIC,GAAoC,IAAjCC,EAAiBD,EAAjBC,kBAC7BC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAgBtB,OACEI,EAAAA,EAAAA,MAAA,QAAMC,SAXsD,SAACC,GAC7DA,EAAEC,iBAIFV,EAF0B,KAAVK,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAI5CC,EAAS,GACX,EAG+BK,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOT,EAAOU,SAhB4B,SAACN,GAChEH,EAASG,EAAEO,OAAOF,MACpB,KAeIF,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAGd,CCtBe,SAASM,IACtB,IAAAhB,GAA4BC,EAAAA,EAAAA,UAA0B,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDiB,EAAMf,EAAA,GAAEgB,EAAShB,EAAA,GACxBiB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAlB,EAAAA,EAAAA,GAAAgB,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WACR,IAAMpB,EAAQkB,EAAaG,IAAI,SAE/B,IAAKrB,EAAO,OAAOc,EAAU,IAE7B,IAAMQ,EAAO,eAAA5B,GAAA6B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAb,EAAA,OAAAW,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACOC,EAAAA,EAAAA,IAAU/B,GAAO,KAAD,EAA/Ba,EAAMe,EAAAI,KAEZlB,GAASmB,EAAAA,EAAAA,GAAKpB,IAAS,wBAAAe,EAAAM,OAAA,GAAAR,EAAA,KACxB,kBAJY,OAAAhC,EAAAyC,MAAA,KAAAC,UAAA,KAMbd,GACF,GAAG,CAACJ,IAMJ,OACEhB,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAA/B,SAAA,EACEC,EAAAA,EAAAA,KAACd,EAAI,CAACE,kBANgB,SAACK,GACzBmB,EAAgBnB,EAClB,IAKKsC,MAAMC,QAAQ1B,KAAWN,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CAAC3B,OAAQA,MAGnD,C","sources":["components/Form/Form.tsx","pages/Movies.tsx"],"sourcesContent":["import { useState } from 'react';\n\ninterface FormProps {\n  updateQueryString: (query: { query?: string }) => void;\n}\n\nexport default function Form({ updateQueryString }: FormProps) {\n  const [query, setQuery] = useState('');\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    const isQuery = query !== '' ? { query } : {};\n\n    updateQueryString(isQuery);\n\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={query} onChange={handleChange} />\n      <button>Search</button>\n    </form>\n  );\n}\n","import { useSearchParams } from 'react-router-dom';\nimport { getMovies } from '../api/getMovies';\nimport { useEffect, useState } from 'react';\nimport MovieList from '../components/MovieList/MovieList';\nimport Form from '../components/Form/Form';\nimport { TopRatedMovie } from '../types/types';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState<TopRatedMovie[]>([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (!query) return setMovies([]);\n\n    const getData = async () => {\n      const movies = await getMovies(query);\n\n      setMovies([...movies]);\n    };\n\n    getData();\n  }, [searchParams]);\n\n  const updateQueryString = (query: { query?: string }) => {\n    setSearchParams(query);\n  };\n\n  return (\n    <>\n      <Form updateQueryString={updateQueryString} />\n      {Array.isArray(movies) && <MovieList movies={movies} />}\n    </>\n  );\n}\n"],"names":["Form","_ref","updateQueryString","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","e","preventDefault","children","_jsx","type","value","onChange","target","Movies","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","get","getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getMovies","sent","_toConsumableArray","stop","apply","arguments","_Fragment","Array","isArray","MovieList"],"sourceRoot":""}